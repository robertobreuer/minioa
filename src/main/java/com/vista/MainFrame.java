/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.vista;

import static com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type.Int;
import io.minio.MinioClient;
import io.minio.Result;
import io.minio.errors.ErrorResponseException;
import io.minio.errors.InsufficientDataException;
import io.minio.errors.InternalException;
import io.minio.errors.InvalidBucketNameException;
import io.minio.errors.InvalidEndpointException;
import io.minio.errors.InvalidPortException;
import io.minio.errors.NoResponseException;
import io.minio.messages.Bucket;
import io.minio.messages.Item;
import java.awt.PopupMenu;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.xmlpull.v1.XmlPullParserException;

/**
 *
 * @author rbreuer
 */
public class MainFrame extends javax.swing.JFrame {

    static final String ACCESS_KEY  = "YEUV1UHKOTAQUB1PGQYP";
    static final String SECRET_KEY  = "0Ivpasu9d0eE2Gn/ifqJh3zLPTrnXbv6DU2K3xWp";
    static final String URL_SERVER  = "http://localhost:9000";
    static String BUCKET="";
    static File[] archivoArray;
    static List [] bucketsArray;
    static  MinioClient minioClient;
    static DefaultListModel<String> model = new DefaultListModel<>();
    
            /**
     * Creates new form MainFrame
     */
    public MainFrame() throws InvalidBucketNameException, NoSuchAlgorithmException, InsufficientDataException, IOException, InvalidKeyException, NoResponseException, XmlPullParserException, ErrorResponseException, InternalException {
        initComponents();
        this.setVisible(true);
        this.setLocationRelativeTo(null); 
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblNuevoBucket = new javax.swing.JLabel();
        lblBorrarBucket = new javax.swing.JLabel();
        lblActualizarBucket = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txPath = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        listBuckets = new javax.swing.JList<>();
        btnCargarArchivos = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaArchivosBucket = new javax.swing.JTable();
        lblActualizarBucket1 = new javax.swing.JLabel();
        lblActualizarBucket2 = new javax.swing.JLabel();
        lblActualizarBucket3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuBorrarBucket = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buckets", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        lblNuevoBucket.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNuevoBucket.setText("Nuevo bucket");
        lblNuevoBucket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblNuevoBucket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNuevoBucketMouseClicked(evt);
            }
        });

        lblBorrarBucket.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblBorrarBucket.setText("Borrar bucket");
        lblBorrarBucket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBorrarBucket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBorrarBucketMouseClicked(evt);
            }
        });

        lblActualizarBucket.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblActualizarBucket.setText("Actualizar");
        lblActualizarBucket.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblActualizarBucket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblActualizarBucketMouseClicked(evt);
            }
        });

        jLabel4.setText("Ruta:");

        txPath.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        txPath.setEnabled(false);

        listBuckets.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        listBuckets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listBucketsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(listBuckets);

        btnCargarArchivos.setText(">>");
        btnCargarArchivos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargarArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarArchivosActionPerformed(evt);
            }
        });

        tablaArchivosBucket.setAutoCreateRowSorter(true);
        tablaArchivosBucket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaArchivosBucket.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(tablaArchivosBucket);

        lblActualizarBucket1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblActualizarBucket1.setText("Subir archivo");
        lblActualizarBucket1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblActualizarBucket1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblActualizarBucket1MouseClicked(evt);
            }
        });

        lblActualizarBucket2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblActualizarBucket2.setText("Guardar archivo");
        lblActualizarBucket2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblActualizarBucket2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblActualizarBucket2MouseClicked(evt);
            }
        });

        lblActualizarBucket3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblActualizarBucket3.setText("Borrar archivo");
        lblActualizarBucket3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblActualizarBucket3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblActualizarBucket3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblNuevoBucket)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBorrarBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblActualizarBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCargarArchivos)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblActualizarBucket2)
                        .addGap(7, 7, 7)
                        .addComponent(lblActualizarBucket3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblActualizarBucket1))
                    .addComponent(jScrollPane2)
                    .addComponent(txPath))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNuevoBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBorrarBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblActualizarBucket, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblActualizarBucket1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblActualizarBucket2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblActualizarBucket3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(btnCargarArchivos)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );

        jMenu1.setText("Archivo");

        jMenuItem4.setText("Descargar archivo");
        jMenu1.add(jMenuItem4);

        jMenuItem6.setText("Subir archivo");
        jMenu1.add(jMenuItem6);

        jMenuItem7.setText("Borrar archivo");
        jMenu1.add(jMenuItem7);
        jMenu1.add(jSeparator1);

        jMenuItem5.setText(" Salir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Bucket");

        jMenuItem1.setText("Crear bucket");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        menuBorrarBucket.setText("Borrar bucket");
        menuBorrarBucket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBorrarBucketActionPerformed(evt);
            }
        });
        jMenu2.add(menuBorrarBucket);
        jMenu2.add(jSeparator2);

        jMenuItem2.setText("Ver logs de sistema");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void mostrarLista(){
         try{
            minioClient = new MinioClient(URL_SERVER, ACCESS_KEY, SECRET_KEY);
        
            List<Bucket> bucketList = minioClient.listBuckets();
           
            for (Bucket bucket : bucketList) {           
               model.addElement(bucket.name());
               System.out.println("print model: \n"+model);
               listBuckets.setModel(model);
              // System.out.println("print: "+bucket.creationDate() + ", " + bucket.name());
               }
             } catch (Exception e) {  
        }      
    }
    
    void resetModel(){
     model.removeAllElements();
    }
    
    void crearBucket(){
        String bucketNuevo= JOptionPane.showInputDialog(null, "Ingrese nombre de bucket ");
        
        try {
            // Create bucket if it doesn't exist.
            boolean found = minioClient.bucketExists(bucketNuevo);
            if (found) {
                System.out.println(bucketNuevo+" un bucket ya existe con ese nombre");
            } else {
                // Create bucket 'my-bucketname'.
                minioClient.makeBucket(bucketNuevo);
                JOptionPane.showMessageDialog(null, bucketNuevo+ "  creado correctamente!");
            }
        } catch (Exception e) {
            System.out.println("print error: " + e);
        }
    }
    
    void borrarBucketLista(String nombreBucket){
    
        try{
            
           int eleccion= JOptionPane.showConfirmDialog(null, "Seguro de borrar bucket:   "+nombreBucket, "Confirmar borrado",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(JOptionPane.OK_OPTION==eleccion){
               nombreBucket  =listBuckets.getSelectedValue();
            minioClient.removeBucket(nombreBucket);
            JOptionPane.showMessageDialog(null, nombreBucket+" borrado correctamente!" );
            resetModel();
            mostrarLista();
        }else {
                    }
        }catch(Exception e){}
    }
    
    void borrarBucketMenus(String nombreBucket){
        try {             
        boolean found = minioClient.bucketExists(nombreBucket);
        if(found){
            int eleccion= JOptionPane.showConfirmDialog(null, "Seguro de borrar bucket:   "+nombreBucket, "Confirmar borrado",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
             if(JOptionPane.OK_OPTION==eleccion){
            minioClient.removeBucket(nombreBucket);
            JOptionPane.showMessageDialog(null, nombreBucket+" borrado correctamente!" );
            resetModel();
            mostrarLista();
            }else{
            }
            }else{
            JOptionPane.showMessageDialog(null, "Bucket no existe.");
            }  
        }catch(Exception e){
        
        }
    }
    
    void mostrarArchivosDeBucket(String nombreBucket){
        try{
            Iterable<Result<Item>> myObjects = minioClient.listObjects(nombreBucket);
            DefaultTableModel tableModel = new DefaultTableModel();
            TableColumnModel tcm = tablaArchivosBucket.getColumnModel();
                     
            tableModel.addColumn("Nombre de archivo");
            tableModel.addColumn("Tamaño");
            tableModel.addColumn("Ultima modificación"); 
              

//            tcm.getColumn(0).setPreferredWidth(150);
//            tcm.getColumn(1).setPreferredWidth(75);
//            tcm.getColumn(2).setPreferredWidth(150);
//            tablaArchivosBucket.setColumnModel(tcm);
            tablaArchivosBucket.setModel(tableModel);
            //tablaArchivosBucket.set
                        
                
            for (Result<Item> result : myObjects) {
                
                Item item = result.get();   
            // System.out.println("print basic: "+result);
                 String fila [] = new String[3];
                   
                fila[0]= String.valueOf(item.objectName());
                fila[1]= String.valueOf(item.size());
                fila[2]=String.valueOf(item.lastModified());
                
                tableModel.addRow(fila);
                //**********************************
                // trae datos de array desde la base de datos
//                for(int i=0;i<fila.length;i++){
//                   Object[] rows = {fila[0], fila[1], fila[2]};
//             //   System.out.println("print for:  "+fila[0]+","+ fila[1]+","+ fila[2]);  
//                    tableModel.addRow(rows);
//   System.out.println(Arrays.toString(rows));
//                }
//**********************************************
                             
                
               // System.out.println(item.lastModified() + ", " + item.size() + ", " + item.objectName());
                    
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    
    }
    
    void verLogs(){
        try {
    
        }catch(Exception e){
    
        }
    }
    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       crearBucket();
       resetModel();
       mostrarLista();       
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
       System.exit(1);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       mostrarLista();
    }//GEN-LAST:event_formWindowOpened

    private void btnCargarArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarArchivosActionPerformed
        String nombreBucket = listBuckets.getSelectedValue();
        
        mostrarArchivosDeBucket(nombreBucket);
    }//GEN-LAST:event_btnCargarArchivosActionPerformed

    private void lblNuevoBucketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNuevoBucketMouseClicked
        crearBucket();
        resetModel();
        mostrarLista();
    }//GEN-LAST:event_lblNuevoBucketMouseClicked

    private void lblActualizarBucketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblActualizarBucketMouseClicked
        resetModel();
        mostrarLista();
    }//GEN-LAST:event_lblActualizarBucketMouseClicked

    private void lblBorrarBucketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBorrarBucketMouseClicked
        String nombreBucket = listBuckets.getSelectedValue();
        borrarBucketLista(nombreBucket);
       // JOptionPane.showMessageDialog(null, nombreBucket);
       
        
    }//GEN-LAST:event_lblBorrarBucketMouseClicked

    private void menuBorrarBucketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBorrarBucketActionPerformed
        String nombreBucket=JOptionPane.showInputDialog(null,"Ingrese nombre de bucket");
        
        borrarBucketMenus(nombreBucket);
    }//GEN-LAST:event_menuBorrarBucketActionPerformed

    private void lblActualizarBucket1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblActualizarBucket1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblActualizarBucket1MouseClicked

    private void lblActualizarBucket2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblActualizarBucket2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblActualizarBucket2MouseClicked

    private void lblActualizarBucket3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblActualizarBucket3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lblActualizarBucket3MouseClicked

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
      LogsDialog lf = new LogsDialog(this, true);
      lf.setVisible(true);
      lf.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void listBucketsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listBucketsMouseClicked
        if(evt.getButton()==MouseEvent.BUTTON3){
            String nombreBucket=listBuckets.getSelectedValue();
            PopupMenu pop = new PopupMenu();

            pop.add("Mostrar logs");

        }

    }//GEN-LAST:event_listBucketsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (InvalidBucketNameException | NoSuchAlgorithmException | InsufficientDataException | IOException | InvalidKeyException | NoResponseException | XmlPullParserException | ErrorResponseException | InternalException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarArchivos;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JLabel lblActualizarBucket;
    private javax.swing.JLabel lblActualizarBucket1;
    private javax.swing.JLabel lblActualizarBucket2;
    private javax.swing.JLabel lblActualizarBucket3;
    private javax.swing.JLabel lblBorrarBucket;
    private javax.swing.JLabel lblNuevoBucket;
    private javax.swing.JList<String> listBuckets;
    private javax.swing.JMenuItem menuBorrarBucket;
    private javax.swing.JTable tablaArchivosBucket;
    private javax.swing.JTextField txPath;
    // End of variables declaration//GEN-END:variables
}
